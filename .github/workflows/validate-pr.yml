---
name: 'Validate pull request'

on: [workflow_dispatch, pull_request]

defaults:
  run:
    shell: bash

permissions:
  id-token: write # needs to log into aws
  contents: read

jobs:
  tests:
    name: 'Run tests'
    runs-on: ubuntu-latest
    if: github.event.repository.name != 'go-template'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Get go version'
        id: goversion
        run: |
          set -eo pipefail
          version="$(< .go-version)"
          echo "::set-output name=version::$version"
      - name: 'Setup go'
        uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.goversion.outputs.version }}

      - name: 'Install dependencies'
        run: go mod download

      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/ssm2ssm-tests

      - name: 'Run unit tests'
        run: go test -v ./...

      - name: 'Install BATS'
        run: brew install bats-core

      - name: 'Run integration tests'
        run: bats -r tests/*.bats
        env:
          TEST_SSM_PREFIX: /test/ssm2ssm

  # precommit:
  #   name: 'Run precommit check'
  #   runs-on: ubuntu-latest
  #   if: github.event.repository.name != 'go-template'
  #   steps:
  #     - name: 'Checkout'
  #       uses: actions/checkout@v2

  #     - name: 'Setup python'
  #       uses: actions/setup-python@v2

  #     - name: 'Get go version'
  #       id: goversion
  #       run: |
  #         set -eo pipefail
  #         version="$(< .go-version)"
  #         echo "::set-output name=version::$version"
  #     - name: 'Setup go'
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: ${{ steps.goversion.outputs.version }}

  #     - name: 'Install dependencies'
  #       run: |
  #         go get -u golang.org/x/lint/golint
  #         go install github.com/fzipp/gocyclo/cmd/gocyclo@latest
  #         brew install golangci-lint

  #     - name: 'Run pre-commit check'
  #       uses: pre-commit/action@v2.0.0
